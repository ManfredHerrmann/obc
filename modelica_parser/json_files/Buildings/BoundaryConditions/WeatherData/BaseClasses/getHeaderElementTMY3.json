{"within":[{"name":"Buildings.BoundaryConditions.WeatherData.BaseClasses"}],"class_definition":[{"class_prefixes":{"prefix":"nullnull null function"},"class_specifier":{"long_class_specifier":{"name":"getHeaderElementTMY3","comment":{"string":"\"Gets an element from the header of a TMY3 weather data file\""},"composition":{"protect":["protected"],"element_list":{"element":[{"extends_clause":{"name":{"name":"Modelica.Icons.Function"}}},{"component_clause":{"type_prefix":{"prefix":" input"},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"filNam"},"comment":{"comment":{"string":"\"Name of weather data file\""},"annotation":{"prefix":"annotation","annotation":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"Dialog"},"modification":{"class_modification":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"loadSelector"},"modification":{"class_modification":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"filter"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"Weather files (*.mos)\""}]}}]}}}}}}}},"comment":{}}}},{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"caption"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"Select weather file\""}]}}]}}}}}}}},"comment":{}}}}]}}},"comment":{}}}}]}}},"comment":{}}}}]}}}}}]}}},{"component_clause":{"type_prefix":{"prefix":" input"},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"start"},"comment":{"comment":{"string":"\"Start of the string that contains the elements\""}}}]}}},{"component_clause":{"type_prefix":{"prefix":" input"},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"name"},"comment":{"comment":{"string":"\"Name of data element, used in error reporting\""}}}]}}},{"component_clause":{"type_prefix":{"prefix":" input"},"type_specifier":{"specifier":{"name":"Integer"}},"component_list":{"component_declaration":[{"declaration":{"name":"position","modification":{"class_modification":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"min"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"1"}]}}]}}}}}}}},"comment":{}}}}]}}}},"comment":{"comment":{"string":"\"Position of the element on the line that contains \u0027start\u0027\""}}}]}}},{"component_clause":{"type_prefix":{"prefix":" output"},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"element"},"comment":{"comment":{"string":"\"Element at position \u0027pos\u0027 of the line that starts with \u0027start\u0027\""}}}]}}}]},"prefixed_element":[{"element":[{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"lin"},"comment":{"comment":{"string":"\"Line that is used in parser\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Integer"}},"component_list":{"component_declaration":[{"declaration":{"name":"iLin"},"comment":{"comment":{"string":"\"Line number\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Integer"}},"component_list":{"component_declaration":[{"declaration":{"name":"index","modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"0"}]}}]}}}}}}}}},"comment":{"comment":{"string":"\"Index of string #LOCATION\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Integer"}},"component_list":{"component_declaration":[{"declaration":{"name":"staInd"},"comment":{"comment":{"string":"\"Start index used when parsing a real number\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Integer"}},"component_list":{"component_declaration":[{"declaration":{"name":"nexInd"},"comment":{"comment":{"string":"\"Next index used when parsing a real number\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Boolean"}},"component_list":{"component_declaration":[{"declaration":{"name":"found"},"comment":{"comment":{"string":"\"Flag, true if #LOCATION has been found\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"Boolean"}},"component_list":{"component_declaration":[{"declaration":{"name":"EOF"},"comment":{"comment":{"string":"\"Flag, true if EOF has been reached\""}}}]}}},{"component_clause":{"type_prefix":{},"type_specifier":{"specifier":{"name":"String"}},"component_list":{"component_declaration":[{"declaration":{"name":"fouDel"},"comment":{"comment":{"string":"\"Found delimiter\""}}}]}}}]}],"algorithm_section":[{"algorithm":"algorithm","statement":[{"component_reference":{"component":"iLin"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"0"}]}}]}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"EOF"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"false"}]}}]}}}}}}},"comment":{"comment":{}}},{"while_statement":{"wHile":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"output_expression_list":{"expression":[{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"not":"not","relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"EOF"}}]}}]}}}}}}}]}}]}}]}}},"logical_relation":"and","logical_factors":[{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"output_expression_list":{"expression":[{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"index"}}]}}]},"rel_op":{"rel_op":"\u003d\u003d"},"expression2":{"terms":[{"factor":{"primarys":[{"simple_primary":"0"}]}}]}}}}}}}]}}]}}]}}}]}}}},"loop":[{"component_reference":{"component":"iLin"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"iLin"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"+"}]}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"Modelica.Utilities.Streams.readLine"},"operator":":\u003d","function_call_args":{"arguments":{"named_arguments":{"argument":{"name":"fileName","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"filNam"}}]}}]}}}}}}}}},"arguments":{"argument":{"name":"lineNumber","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"iLin"}}]}}]}}}}}}}}}}}}},"output_expression_list":{"expression":[{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}}]}}}}}}},{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"EOF"}}]}}]}}}}}}}]},"comment":{"comment":{}}},{"component_reference":{"component":"index"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"name":{"name":"Modelica.Utilities.Strings.find"},"function_call_args":{"arguments":{"named_arguments":{"argument":{"name":"string","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}}]}}}}}}}}},"arguments":{"argument":{"name":"searchString","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"start"}}]}}]}}}}}}}}},"arguments":{"argument":{"name":"startIndex","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"1"}]}}]}}}}}}}}},"arguments":{"argument":{"name":"caseSensitive","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"false"}]}}]}}}}}}}}}}}}}}}}]}}]}}}}}}},"comment":{"comment":{}}}]},"comment":{"comment":{}}},{"component_reference":{"component":"assert"},"function_call_args":{"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"not":"not","relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"EOF"}}]}}]}}}}}}}},"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"Error: Did not find \u0027\""}]}},{"factor":{"primarys":[{"component_reference":{"component":"start"}}]}},{"factor":{"primarys":[{"simple_primary":"\"\u0027 when scanning the weather file.\""}]}},{"factor":{"primarys":[{"simple_primary":"\"\\n   Check for correct weather file syntax.\""}]}}],"adds":[{"add_op":"+"},{"add_op":"+"},{"add_op":"+"}]}}}}}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"nexInd"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"1"}]}}]}}}}}}},"comment":{"comment":{}}},{"for_statement":{"loop_indices":{"for_index":[{"for_index":"i","in_expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"1"}]}}]}}}}},"operator1":":","expression2":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"position"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"-"}]}}}}}}}}]},"loop_statements":[{"component_reference":{"component":"nexInd"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"name":{"name":"Modelica.Utilities.Strings.find"},"function_call_args":{"arguments":{"named_arguments":{"argument":{"name":"string","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}}]}}}}}}}}},"arguments":{"argument":{"name":"searchString","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\",\""}]}}]}}}}}}}}},"arguments":{"argument":{"name":"startIndex","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"+"}]}}}}}}}}}}}}}}}]}}]}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"assert"},"function_call_args":{"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}}]},"rel_op":{"rel_op":"\u003e"},"expression2":{"terms":[{"factor":{"primarys":[{"simple_primary":"0"}]}}]}}}}}}}},"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"Error when scanning weather file. Not enough tokens to find \""}]}},{"factor":{"primarys":[{"component_reference":{"component":"name"}}]}},{"factor":{"primarys":[{"simple_primary":"\".\""}]}},{"factor":{"primarys":[{"simple_primary":"\"\\n   Check for correct file syntax.\""}]}},{"factor":{"primarys":[{"simple_primary":"\"\\n   The scanned line is \u0027\""}]}},{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}},{"factor":{"primarys":[{"simple_primary":"\"\u0027.\""}]}}],"adds":[{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"}]}}}}}}}}}}},"comment":{"comment":{}}}]},"comment":{"comment":{}}},{"component_reference":{"component":"staInd"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}}]}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"nexInd"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"name":{"name":"Modelica.Utilities.Strings.find"},"function_call_args":{"arguments":{"named_arguments":{"argument":{"name":"string","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}}]}}}}}}}}},"arguments":{"argument":{"name":"searchString","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\",\""}]}}]}}}}}}}}},"arguments":{"argument":{"name":"startIndex","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"+"}]}}}}}}}}}}}}}}}]}}]}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"assert"},"function_call_args":{"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}}]},"rel_op":{"rel_op":"\u003e"},"expression2":{"terms":[{"factor":{"primarys":[{"simple_primary":"0"}]}}]}}}}}}}},"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"Error when scanning weather file. Not enough tokens to find \""}]}},{"factor":{"primarys":[{"component_reference":{"component":"name"}}]}},{"factor":{"primarys":[{"simple_primary":"\".\""}]}},{"factor":{"primarys":[{"simple_primary":"\"\\n   Check for correct file syntax.\""}]}},{"factor":{"primarys":[{"simple_primary":"\"\\n   The scanned line is \u0027\""}]}},{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}},{"factor":{"primarys":[{"simple_primary":"\"\u0027.\""}]}}],"adds":[{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"},{"add_op":"+"}]}}}}}}}}}}},"comment":{"comment":{}}},{"component_reference":{"component":"element"},"operator":":\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"name":{"name":"Modelica.Utilities.Strings.substring"},"function_call_args":{"arguments":{"argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"lin"}}]}}]}}}}}}}},"arguments":{"named_arguments":{"argument":{"name":"startIndex","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"staInd"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"+"}]}}}}}}}}},"arguments":{"argument":{"name":"endIndex","argument":{"expressions":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"component_reference":{"component":"nexInd"}}]}},{"factor":{"primarys":[{"simple_primary":"1"}]}}],"adds":[{"add_op":"-"}]}}}}}}}}}}}}}}}]}}]}}}}}}},"comment":{"comment":{}}}]}],"comp_annotation":{"prefix":"annotation","annotation":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"Inline"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"false"}]}}]}}}}}}}},"comment":{}}}},{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"Documentation"},"modification":{"class_modification":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"info"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"\u003chtml\u003e\nThis function scans the weather data file for a line that starts with the string \u003cpre\u003e\nstart\n\u003c/pre\u003e\nwhere \u003ccode\u003estart\u003c/code\u003e is a parameter.\nWhen this line is found, the function returns the element at the position number\n\u003ccode\u003eposition\u003c/code\u003e, where \u003ccode\u003eposition\u003c/code\u003e is a parameter.\nA comma is used as the delimiter of the elements.\n\u003c/html\u003e\""}]}}]}}}}}}}},"comment":{}}}},{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"revisions"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"\u003chtml\u003e\n\u003cul\u003e\n\u003cli\u003e\nApril 21, 2016, by Michael Wetter:\u003cbr/\u003e\nRemoved call to\n\u003ca href\u003d\\\"modelica://Buildings.BoundaryConditions.WeatherData.BaseClasses.getAbsolutePath\\\"\u003e\nBuildings.BoundaryConditions.WeatherData.BaseClasses.getAbsolutePath\u003c/a\u003e\nbecause this function calls\n\u003ca href\u003d\\\"modelica://Modelica.Utilities.Files.loadResource\\\"\u003e\nModelica.Utilities.Files.loadResource\u003c/a\u003e, which needs to be resolved at compilation\ntime, which is difficult if it is inside a function.\nThis is for\n\u003ca href\u003d\\\"https://github.com/lbl-srg/modelica-buildings/issues/506\\\"\u003eBuildings, #506\u003c/a\u003e.\n\u003c/li\u003e\n\u003cli\u003e\nSeptember 24, 2015, by Marcus Fuchs:\u003cbr/\u003e\nReplace Dymola specific annotation by \u003ccode\u003eloadSelector\u003c/code\u003e\nfor MSL compliancy as reported by @tbeu at\n\u003ca href\u003d\\\"https://github.com/RWTH-EBC/AixLib/pull/107\\\"\u003eRWTH-EBC/AixLib#107\u003c/a\u003e\n\u003c/li\u003e\n\u003cli\u003e\nMay 2, 2013, by Michael Wetter:\u003cbr/\u003e\nAdded function call to \u003ccode\u003egetAbsolutePath\u003c/code\u003e.\n\u003c/li\u003e\n\u003cli\u003e\nFebruary 25, 2012, by Michael Wetter:\u003cbr/\u003e\nRemoved default value for parameter \u003ccode\u003ename\u003c/code\u003e.\n\u003c/li\u003e\n\u003cli\u003e\nMarch 5, 2011, by Michael Wetter:\u003cbr/\u003e\nFirst implementation.\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/html\u003e\""}]}}]}}}}}}}},"comment":{}}}}]}}},"comment":{}}}}]}}}}}}}]}
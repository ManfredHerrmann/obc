{"within":[{"name":"Buildings.Electrical"}],"class_definition":[{"class_prefixes":{"prefix":"package"},"class_specifier":{"long_class_specifier":{"name":"UsersGuide","comment":{"string":"\"Electrical package user\u0027s guide\""},"composition":{"element_list":{"element":[{"extends_clause":{"name":{"name":"Modelica.Icons.Information"}}}]},"comp_annotation":{"prefix":"annotation","annotation":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"preferredView"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"info\""}]}}]}}}}}}}},"comment":{}}}},{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"Documentation"},"modification":{"class_modification":{"argument_list":{"argument":[{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"info"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"\u003chtml\u003e\n\n\u003ch4\u003eOverview\u003c/h4\u003e\n\u003cp\u003e\nThe \u003ca href\u003d\\\"modelica://Buildings.Electrical\\\"\u003eBuildings.Electrical\u003c/a\u003e package extends the\ncapabilities of the buildings library with models for electrical systems, allowing\nto study building-to-grid integration such as the effect of large scale PV on the\nvoltage of the electrical distribution grid.\nThe package contains models for different types of sources, loads, storage equipment,\nand transmission lines for electric power. The package contains models that can be used to\nrepresent DC, AC one-phase, and AC three-phase balanced and unbalanced systems.\nThe models can be used to scale from the building level up to the distribution level.\nThe models have been successfully validated against the IEEE four nodes test feeder.\n\u003c/p\u003e\n\n\u003ch4\u003eConnectors\u003c/h4\u003e\n\u003cp\u003e\nThe \u003ca href\u003d\\\"modelica://Buildings.Electrical\\\"\u003eBuildings.Electrical\u003c/a\u003e package uses a\nnew type of generalized connector that has been introduced by \u003ca href\u003d\\\"#RuedigerEtAl2014\\\"\u003eR. Franke and Wiesman (2014)\u003c/a\u003e\nand is used by the \u003ca href\u003d\\\"https://github.com/modelica/PowerSystems\\\"\u003ePower Systems Library\u003c/a\u003e\nand the \u003ca href\u003d\\\"http://www.modelon.com/products/modelica-libraries/electric-power-library\\\"\u003e\nElectric Power Library\u003c/a\u003e.\n\u003c/p\u003e\n\u003cp\u003e\nThe Modelica Standard Library (MSL) version 3.2.1 has different connectors depending on the\ntype of electric system being modeled. For example, DC and AC continuous time systems have\na connector (\u003ca href\u003d\\\"modelica://Modelica.Electrical.Analog.Interfaces.Pin\\\"\u003eModelica.Electrical.Analog.Interfaces.Pin\u003c/a\u003e)\nthat differs from the one used by AC models, which use the\nquasi-stationary assumption (\u003ca href\u003d\\\"modelica://Modelica.Electrical.QuasiStationary.SinglePhase.Interfaces.Pin\\\"\u003e\nModelica.Electrical.QuasiStationary.SinglePhase.Interfaces.Pin\u003c/a\u003e).\n\u003c/p\u003e\n\u003cp\u003e\nThe generalized electrical connector overcomes this limitation. It uses a paradigm\nthat is similar to the one used by the \u003ccode\u003eModelica.Fluid\u003c/code\u003e connectors.\nThe generalized connector is as follows:\n\u003c/p\u003e\n\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#0000ff;\\\"\u003econnector\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e Terminal \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#006400;\\\"\u003e\u0026quot;Generalized electric terminal\u0026quot;\u003c/span\u003e\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#0000ff;\\\"\u003eextends \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#ff0000;\\\"\u003eBuildings.Electrical.Interfaces.BaseTerminal\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e;\u003c/span\u003e\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#0000ff;\\\"\u003ereplaceable package\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e PhaseSystem \u003d \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#ff0000;\\\"\u003eBuildings.Electrical.PhaseSystems.PartialPhaseSystem \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#006400;\\\"\u003e\u0026quot;Phase system\u0026quot;\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e;\u003c/span\u003e\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#ff0000;\\\"\u003ePhaseSystem.Voltage\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e v[PhaseSystem.n] \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#006400;\\\"\u003e\u0026quot;Voltage vector\u0026quot;\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e;\u003c/span\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#0000ff;\\\"\u003eflow \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#ff0000;\\\"\u003ePhaseSystem.Current\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e i[PhaseSystem.n] \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#006400;\\\"\u003e\u0026quot;Current vector\u0026quot;\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e;\u003c/span\u003e\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#ff0000;\\\"\u003ePhaseSystem.ReferenceAngle\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e theta[PhaseSystem.m] \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#006400;\\\"\u003e\u0026quot;Optional vector of phase angles\u0026quot;\u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003e;\u003c/span\u003e\n\u003c/p\u003e\n\u003cp style\u003d\\\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; -qt-user-state:8;\\\"\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027; color:#0000ff;\\\"\u003eend \u003c/span\u003e\n\u003cspan style\u003d\\\" font-family:\u0027Courier New,courier\u0027;\\\"\u003eTerminal;\u003c/span\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nThe connector has a package called \u003ccode\u003ePhaseSystem\u003c/code\u003e that contains constants, functions,\nand equations of the specific electric domain. This allows to represent different electrical domains using the\nsame connector, reusing the same standardized interfaces.\n\u003c/p\u003e\n\n\u003cp\u003e\nAs the electrical connectors of the Modelica Standard Library, the \u003ccode\u003eTerminal\u003c/code\u003e has a vector of voltages as effort variables and\na vector of currents as flow variables. The connector has an additional vector that represents the\nreference angle \u003ccode\u003etheta[PhaseSystem.m]\u003c/code\u003e. If \u003ccode\u003ePhaseSystem.m \u0026gt; 0\u003c/code\u003e the connector is overdetermined\nbecause the number of effort variables is higher than the number of flow variables.\nThe over-determined connectors are defined and used in such a way that a Modelica tool is able\nto remove the superfluous but consistent equations, arriving at a balanced set of equations based on a\ngraph analysis of the connection structure. The models in the library uses constructs specified\nby the Modelica language to handle this situation \u003ca href\u003d\\\"#Olsson2008\\\"\u003eOlsson Et Al. (2008)\u003c/a\u003e.\n\u003c/p\u003e\n\n\u003ch4\u003ePhaseSystem\u003c/h4\u003e\n\n\u003cp\u003e\nThe connector has a package called \u003ccode\u003ePhaseSystem\u003c/code\u003e that allows to represent different\nelectrical domains using the same connector, reusing the same standardized interfaces.\nThe available \u003ccode\u003ePhaseSystems\u003c/code\u003e are contained in the package\n\u003ca href\u003d\\\"modelica://Buildings.Electrical.PhaseSystems\\\"\u003e\nBuildings.Electrical.PhaseSystems\u003c/a\u003e.\n\u003c/p\u003e\n\u003cp\u003e\nEach of the available packages represent a different type of electrical systems.\nThe electrical systems represented are:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eDC systems,\u003c/li\u003e\n\u003cli\u003eDC systems with two conductors,\u003c/li\u003e\n\u003cli\u003eone-phase AC systems,\u003c/li\u003e\n\u003cli\u003ethree-phase resistive balanced AC systems,\u003c/li\u003e\n\u003cli\u003ethree-phase balanced AC systems,\u003c/li\u003e\n\u003cli\u003ethree-phase unbalanced AC systems (dq0 representation).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eLinearized models and homotopy initialization\u003c/h4\u003e\n\u003cp align\u003d\\\"center\\\"\u003e\n\u003cimg alt\u003d\\\"image\\\" src\u003d\\\"modelica://Buildings/Resources/Images/Electrical/DC/Loads/simpleLoad.png\\\"/\u003e\n\u003c/p\u003e\n\u003cp\u003e\nConsider the simple DC circuit shown above, where \u003ci\u003eV\u003csub\u003eS\u003c/sub\u003e\u003c/i\u003e is a\nconstant voltage source and \u003ci\u003eR\u003c/i\u003e is a line resistance. The load has a voltage \u003ci\u003eV\u003c/i\u003e across\nits electrical pins and a current \u003ci\u003ei\u003c/i\u003e. If the power consumed\nby the load is \u003ci\u003eP\u003csub\u003eLOAD\u003c/sub\u003e\u003c/i\u003e, the equation that describes the circuit is nonlinear.\n\u003c/p\u003e\n\n\u003cp align\u003d\\\"center\\\"\u003e\n\u003cimg alt\u003d\\\"image\\\" src\u003d\\\"modelica://Buildings/Resources/Images/Electrical/UsersGuide/nonlinearEq.png\\\"/\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\nIf the number of loads increases, as typically happens in grid simulations, the size of the system of\nnonlinear equations to be solved increases too, causing the numerical solver to slow the simulation.\nA linearized load model can solve such a problem. All the load models in the\n\u003ca href\u003d\\\"modelica://Buildings.Electrical\\\"\u003eBuildings.Electrical\u003c/a\u003e package have a linearized version.\nThe linearized version of the model can be selected by setting the boolean flag \u003ccode\u003elinearized \u003d true\u003c/code\u003e.\nDetails about the implementation of the linearized models can be found in\n\u003ca href\u003d\\\"modelica://Buildings.Electrical.DC.Loads.Conductor\\\"\u003eBuildings.Electrical.DC.Loads.Conductor\u003c/a\u003e\nor\n\u003ca href\u003d\\\"modelica://Buildings.Electrical.AC.OnePhase.Loads.Resistive\\\"\u003eBuildings.Electrical.AC.OnePhase.Loads.Resistive\u003c/a\u003e.\n\u003c/p\u003e\n\n\u003cp\u003e\nWhen multiple loads are connected in a grid through cables that cause voltage drops,\nthe dimension of the system of nonlinear equations increases linearly with the number of loads.\nThis nonlinear system of equations introduces challenges during the initialization, as Newton solvers\nmay diverge if initialized far from a solution.\nThe initialization problem can be simplified using the homotopy\noperator. The homotopy operator uses two different types of equations to compute the value of a\nvariable: the actual one and a simplified one. The actual equation is the one used during the normal\noperation. During initialization, the simplified equation is first solved and then slowly replaced with the\nactual equation to compute the initial values for the nonlinear systems of equations.\nThe load model uses the homotopy operator, with the linearized model being used\nas the simplified equation. This numerical expedient has proven useful\nwhen simulating models with more than ten connected loads.\nAll the load models of the \u003ca href\u003d\\\"modelica://Buildings.Electrical\\\"\u003eBuildings.Electrical\u003c/a\u003e package use the\nthe homotopy operator during the initialization. The parameter \u003ccode\u003einitMode\u003c/code\u003e is used to select which\nsimplified equation should be used by the homotopy operator:\n\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ccode\u003eBuildings.Electrical.Types.InitMode.zeroCurrent\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003e\u003ccode\u003eBuildings.Electrical.Types.InitMode.linearized\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch4\u003eNominal values\u003c/h4\u003e\n\u003cp\u003e\nMost components have a parameters for the nominal operating conditions.\nThese parameters have names that end in \u003ccode\u003e_nominal\u003c/code\u003e and\nthey should be set to the values that the component typically\nhave if they are run at design conditions. Depending on the model, these\nparameters are used differently, and the respective model documentation or code\nshould be consulted for details. However, the table below shows the typical use of\nthe parameters in various models to help the user understand how they are used.\n\u003c/p\u003e\n\u003ctable summary\u003d\\\"summary\\\" border\u003d\\\"1\\\" cellspacing\u003d\\\"0\\\" cellpadding\u003d\\\"2\\\" style\u003d\\\"border-collapse:collapse;\\\"\u003e\n\u003ctr\u003e\n\u003cth\u003eParameter\u003c/th\u003e\n\u003cth\u003eModel\u003c/th\u003e\n\u003cth\u003eFunctionality\u003c/th\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n  \u003ctd\u003eV_nominal\u003cbr/\u003e\n      P_nominal\u003c/td\u003e\n  \u003ctd\u003eLoad models\u003c/td\u003e\n  \u003ctd\u003e\n  \u003ccode\u003eV_nominal\u003c/code\u003e is the RMS (Root Mean Square) voltage at which the load consumes the\n  nominal real power (measured in [W]) \u003ccode\u003eP_nominal\u003c/code\u003e.\n  When the load model are linearized, the linearization is done for \u003ccode\u003eV \u003d V_nominal\u003c/code\u003e.\n  \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n  \u003ctd\u003eV_nominal\u003cbr/\u003e\n      P_nominal\u003c/td\u003e\n  \u003ctd\u003eTransmission line models\n  \u003c/td\u003e\n  \u003ctd\u003e\n  \u003ccode\u003eV_nominal\u003c/code\u003e is the RMS (Root Mean Square) voltage at which the line operates\n  while \u003ccode\u003eP_nominal\u003c/code\u003e is the power flowing through it. These values are used in some\n  cases to automatically select the right cable properties.\n  \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n  \u003ctd\u003eV_nominal\u003c/td\u003e\n  \u003ctd\u003eStorage\u003cbr/\u003e\n      PVs\u003cbr/\u003e\n      Wind turbine\n  \u003c/td\u003e\n  \u003ctd\u003e\n  \u003ccode\u003eV_nominal\u003c/code\u003e is the RMS (Root Mean Square) voltage at which these components\n  typically operate. Since these model contain load models, \u003ccode\u003eV_nominal\u003c/code\u003e can be used\n  for linearization purposes.\n  \u003c/td\u003e\n\u003c/tr\u003e\n\u003ctr\u003e\n  \u003ctd\u003eV_nominal\u003c/td\u003e\n  \u003ctd\u003eSensors\u003c/td\u003e\n  \u003ctd\u003e\n  \u003ccode\u003eV_nominal\u003c/code\u003e is the RMS (Root Mean Square) voltage of the system\n  that is currently measured, it can be used to measure quantities in per unit [pu].\n  \u003c/td\u003e\n\u003c/tr\u003e\n\u003c/table\u003e\n\n\u003ch4\u003eOther information\u003c/h4\u003e\n\u003cp\u003e\nOther information about the models and the packages can be found in the\ninfo section of each model or sub-packages.\n\u003c/p\u003e\n\n\u003ch4\u003eAwards\u003c/h4\u003e\n\u003cp\u003e\nThe paper titled \u003ca href\u003d\\\"modelica://Buildings/Resources/Images/Electrical/UsersGuide/2014-BauSim-BonviniWetterNouidui.pdf\\\"\u003e\nA Modelica package for building-to-electrical grid integration\u003c/a\u003e won the best paper\naward at the BauSIM 2014 conference.\n\u003c/p\u003e\n\n\u003ch4\u003eReferences\u003c/h4\u003e\n\u003cp\u003e\n\u003ca name\u003d\\\"BonviniEtAl2014\\\"/\u003e\nMarco Bonvini, Michael Wetter, and Thierry Stephane Nouidui.\u003cbr/\u003e\n\u003ca href\u003d\\\"modelica://Buildings/Resources/Images/Electrical/UsersGuide/2014-BauSim-BonviniWetterNouidui.pdf\\\"\u003e\nA Modelica package for building-to-electrical grid integration\u003c/a\u003e\u003cbr/\u003e\n\u003ci\u003eBauSIM 2014 Conference\u003c/i\u003e, Aachen, Germany, September 2014.\u003cbr/\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ca name\u003d\\\"RuedigerEtAl2014\\\"/\u003e\nRudiger Franke and Hansjorg Wiesmann.\u003cbr/\u003e\n\u003ca href\u003d\\\"https://www.modelica.org/events/modelica2014/proceedings/html/submissions/ECP14096515_FrankeWiesmann.pdf\\\"\u003e\nFlexible modeling of electrical power systems - the Modelica PowerSystems library\u003c/a\u003e.\u003cbr/\u003e\nProc. of the 10th Modelica Conference, Lund, Sweden, March 2014.\u003cbr/\u003e\n\u003c/p\u003e\n\n\u003cp\u003e\n\u003ca name\u003d\\\"Olsson2008\\\"/\u003e\nHans Olsson, Martin Otter, Sven Erik Mattson and Hilding Elmqvist.\u003cbr/\u003e\n\u003ca href\u003d\\\"http://elib-v3.dlr.de/55892/1/otter2008-modelica-balanced-models.pdf\\\"\u003e\nBalanced Models in Modelica 3.0 for Increased Model Quality\u003c/a\u003e.\u003cbr/\u003e\nProc. of the 7th Modelica Conference, Bielefeld, Germany, March 2008.\u003cbr/\u003e\n\u003c/p\u003e\n\u003c/html\u003e\""}]}}]}}}}}}}},"comment":{}}}},{"element_modification_or_replaceable":{"element_modification":{"name":{"name":"revisions"},"modification":{"symbol":"\u003d","expression":{"simple_expression":{"expression1":{"logical_term":{"logical_factor":{"relation":{"expression1":{"terms":[{"factor":{"primarys":[{"simple_primary":"\"\u003chtml\u003e\n\u003cul\u003e\n\u003cli\u003e\nMay 15, 2014, by Marco Bonvini:\u003cbr/\u003e\nCreated User\u0027s guide.\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/html\u003e\""}]}}]}}}}}}}},"comment":{}}}}]}}},"comment":{}}}}]}}}}}}}]}